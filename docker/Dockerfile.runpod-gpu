# RunPod GPU-Enabled Environment Dockerfile
FROM nvidia/cuda:12.4.1-cudnn9-devel-ubuntu22.04

LABEL maintainer="elbahnasy"
LABEL description="YOLOs-CPP Benchmark Environment for RunPod (GPU-Enabled)"

# Avoid interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    unzip \
    pkg-config \
    libgtk-3-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    gfortran \
    openexr \
    libatlas-base-dev \
    python3-dev \
    python3-numpy \
    libtbb2 \
    libtbb-dev \
    htop \
    sysstat \
    procps \
    vim \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Install OpenCV with CUDA support
RUN cd /tmp && \
    wget -O opencv.zip https://github.com/opencv/opencv/archive/4.5.5.zip && \
    wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.5.5.zip && \
    unzip opencv.zip && \
    unzip opencv_contrib.zip && \
    mkdir -p opencv-4.5.5/build && \
    cd opencv-4.5.5/build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D INSTALL_PYTHON_EXAMPLES=OFF \
          -D INSTALL_C_EXAMPLES=OFF \
          -D BUILD_EXAMPLES=OFF \
          -D BUILD_opencv_python3=OFF \
          -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-4.5.5/modules \
          -D WITH_CUDA=ON \
          -D CUDA_ARCH_BIN=7.5,8.0,8.6 \
          -D WITH_CUDNN=ON \
          -D ENABLE_FAST_MATH=1 \
          -D CUDA_FAST_MATH=1 \
          -D WITH_CUBLAS=1 \
          .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig && \
    cd / && rm -rf /tmp/opencv*

# Create workspace and install ONNX Runtime (GPU version)
RUN mkdir -p /workspace && cd /workspace && \
    wget https://github.com/microsoft/onnxruntime/releases/download/v1.20.1/onnxruntime-linux-x64-gpu-1.20.1.tgz && \
    tar -xzf onnxruntime-linux-x64-gpu-1.20.1.tgz && \
    rm onnxruntime-linux-x64-gpu-1.20.1.tgz

# Set up environment variables
ENV ONNXRUNTIME_DIR=/workspace/onnxruntime-linux-x64-gpu-1.20.1
ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH:-}:$ONNXRUNTIME_DIR/lib:/usr/local/cuda/lib64"

# Create workspace structure
WORKDIR /workspace
RUN mkdir -p yolos-cpp/models yolos-cpp/data yolos-cpp/results yolos-cpp/benchmark

# Copy project files (to be mounted or copied)
# COPY . /workspace/yolos-cpp/

# Set up entrypoint
COPY benchmark/runpod_setup.sh /workspace/runpod_setup.sh
RUN chmod +x /workspace/runpod_setup.sh

# Default command
CMD ["/workspace/runpod_setup.sh"]
