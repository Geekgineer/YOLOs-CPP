# Simplified YOLOs-CPP Docker Image for RunPod
FROM ubuntu:22.04

LABEL maintainer="elbahnasy"
LABEL description="YOLOs-CPP Benchmark Environment - Simplified Version"

# Avoid interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    unzip \
    pkg-config \
    libopencv-dev \
    python3-dev \
    python3-pip \
    htop \
    sysstat \
    procps \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages for analysis
RUN pip3 install matplotlib seaborn pandas numpy

# Create workspace and install ONNX Runtime (CPU version)
RUN mkdir -p /workspace && cd /workspace && \
    wget https://github.com/microsoft/onnxruntime/releases/download/v1.20.1/onnxruntime-linux-x64-1.20.1.tgz && \
    tar -xzf onnxruntime-linux-x64-1.20.1.tgz && \
    rm onnxruntime-linux-x64-1.20.1.tgz

# Set up environment variables
ENV ONNXRUNTIME_DIR=/workspace/onnxruntime-linux-x64-1.20.1
ENV LD_LIBRARY_PATH="/workspace/onnxruntime-linux-x64-1.20.1/lib:${LD_LIBRARY_PATH:-}"

# Create workspace structure
WORKDIR /workspace
RUN mkdir -p yolos-cpp/models yolos-cpp/data yolos-cpp/results yolos-cpp/benchmark

# Copy project files
COPY . /workspace/yolos-cpp/

# Build the project
RUN cd /workspace/yolos-cpp && \
    rm -rf build && \
    mkdir -p build && \
    cd build && \
    cmake -DONNXRUNTIME_DIR=$ONNXRUNTIME_DIR .. && \
    make -j$(nproc)

# Set up entrypoint
COPY benchmark/runpod_setup.sh /workspace/runpod_setup.sh
RUN chmod +x /workspace/runpod_setup.sh

# Default command
CMD ["/workspace/runpod_setup.sh"]
